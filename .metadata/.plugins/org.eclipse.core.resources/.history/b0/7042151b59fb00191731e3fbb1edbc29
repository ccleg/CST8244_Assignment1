#include <stdio.h>
#include <stdlib.h>
#include <process.h>
#include <string.h>
#include <errno.h>
#include <sys/neutrino.h>
#include <sys/netmgr.h>
#include <limits.h>
#include <float.h>

#include "ASS1.h"
void setStartSide(char* side);
char* input_msg;
Person_T person;
int main(int argc, char* argv) {
	
	if (argc != 2){
		fprintf(stderr,"Invalid number of arguments.");
		exit(EXIT_FAILURE);
	}

	pid_t display_pid = atoi(argv[1]);
	int chid;

	char* display_msg;
	int coid;
	int rcvid;
	chid = ChannelCreate(0);

	if(chid == -1){
		fprintf(stderr, "Failed to create a channel");
		exit(EXIT_FAILURE);
	}
	coid = ConnectAttach(ND_LOCAL_NODE, display_pid, 1, _NTO_SIDE_CHANNEL, 0);
	if (coid == -1) {
		perror("Channel could not be attached\n");
		exit(EXIT_FAILURE);
	}
	while(1){
	rcvid = MsgReceive(chid, input_msg, sizeof(input_msg), NULL);
	setStartSide(input_msg);
	(*STATE_HANDLER[person.currentState])(input_msg);


	}







	return EXIT_SUCCESS;
}
void setStartSide(char* side){
	if(strcmp(side,"ls") == 0){
			person.side = LEFT;
			person.currentState = START;
	}
	if(strcmp(side,"rs") == 0){
			person.side = RIGHT;
			person.currentState = START;
		}
}
void SCAN_FUNC(char* input){

	person.currentState++;
}
void UNLOCK_FUNC(char* input){

}
void OPEN_FUNC(char* input){

}
void WEIGHT_FUNC(char* input){

}
void CLOSE_FUNC(char* input){

}
void GUARD_EXIT_UNL_FUNC(char* input){

}
void GUARD_EXIT_OPEN_FUNC(char* input){

}
void EXIT_CLOSE_FUNC(char* input){

}
void GUARD_EXIT_LOCK_FUNC(char* input){

}
void EXIT_FUNC(char* input){

}
